@import '/styles/abstracts/variables';
@import '/styles/abstracts/mixins';

body {
  background-color: shade($white, 2);
  @media ( max-width: $maxTabletWidth  ) {
    background-color: $white;
  }
}

.content-odds{
  strong {
    font-weight: bold;
  }
  a {
    font-weight: 600;
    border-bottom: 1px solid $blue;
    color: $sbr-neutral-200;
    text-decoration: none;
  }
}


.content {
  .boxScore {
    &-container {
      position: relative;
      text-align: right;
      margin-top: 25px;
      margin-bottom: -55px;
      z-index: 100;
    }
    cursor: pointer;
    color: get-color(blacks, 45);
    span {
      margin-right: 0.5rem;
      font-weight: 400;
    }
    .react-switch {
      margin-bottom: -5px;
    }
    @media ( max-width: $maxTabletWidth  ) {
      display: flex;
      justify-content: flex-end;
      margin-right: 1.5rem;
    }
    @media ( min-width: $breakLG  ) {
      margin-bottom: -70px;
    }

  }
}

.show {
  @include opacity(1);
  visibility: visible;
  transition: visibility 0s, opacity 1.6s linear;
  -webkit-transition: visibility 0s, opacity 1.6s linear;
}
.hide {
  @include opacity(0);
  visibility: hidden;
  transition: visibility 0s, opacity 0.25s linear;
  -webkit-transition: visibility 0s, opacity 0.25s linear;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

.border {
  &-left {
    border-left: $default-border;
  }
  &-right {
      border-right: $default-border;
  }
  &-top {
    border-top: $default-border;
  }
  &-bottom {
      border-bottom: $default-border;
  }
  &-all {
    border: $default-border;
  }
}

.bckg {
    &-gray {
      background-color: get-color(silvers, tint-50);
    }
    &-blue {
      background-color: get-color(sbr-blue, bckg-darker);
    }
    &-light {
      &_blue {
        background-color: get-color(sbr-blue, bckg-darker);
      }
    }
    &-dark {
      background-color: get-color(sbr-blue, bckg);
      &_blue {
        background-color: get-color(sbr-blue, ddheader);
      }
      &_darkerBlue {
        background-color: get-color(blacks, 15);
      }
    }
    &-white {
      background-color: $white;
    }
}

.ReactModal__Overlay {
  &--after-open {
    z-index: 3000 !important;
  }

}
.stick {
  position: fixed;
  top: 0;
  width: $containerWidth - 3vw;
  max-width:inherit;
  z-index: 3;
  background-color: get-color(silvers, 50);
  border-bottom: $default-border;
}
$position: (
  't': 'top',
  'r': 'right',
  'b': 'bottom',
  'l': 'left'
);
.p {
  @for $i from 1 through 3 {
    @each $p, $name in $position {
      &#{$p}-#{$i} {
        padding-#{$name}: calc(0.5rem * $i);
      }
    }
    &y-#{$i} {
      padding-top: calc(0.5rem * $i);
      padding-bottom: calc(0.5rem * $i);
    }
    &x {
      padding-left: calc(0.5rem * $i);
      padding-right: calc(0.5rem * $i);
    }
  }

}

table {
  border: 0 none;
  margin: 3.2rem 0;
  font-size: 1.4rem;
  width: auto;
  tr {
      vertical-align: middle;
      td {
          padding: .8rem 1.2rem;
          border: 0 none;
      }
  }

  tbody {
      tr:nth-child(odd) {
          background-color: #f4f5f9;
      }
  }
}

ul{
  padding:16px;
}

li{
  margin-bottom: 8px;
}